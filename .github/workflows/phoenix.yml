name: CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['23.1.1']
        elixir: ['1.11.3']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
        otp-version: ${{matrix.otp}} # Define the OTP version [required]

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build

          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Fetch dependencies
      run: mix deps.get
    - name: ==> ðŸ”Ž Lint
      run: mix credo --strict

  check_format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
        otp-version: ${{matrix.otp}} # Define the OTP version [required]

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build

          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Fetch dependencies
      run: mix deps.get
    - name: ==> ðŸ”Ž Format check
      run: mix format --check-formatted

  dialyze:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
        otp-version: ${{matrix.otp}} # Define the OTP version [required]

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build

          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Fetch dependencies
      run: mix deps.get
    - name: ==> ðŸ”Ž Static dialyze
      run: mix dialyzer

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
        otp-version: ${{matrix.otp}} # Define the OTP version [required]

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build

          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Fetch dependencies
      run: mix deps.get
    - name: ==> ðŸ”Ž Sobelow Security
      run: mix sobelow --config

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
        otp-version: ${{matrix.otp}} # Define the OTP version [required]

    - uses: actions/cache@v2
      env:
        cache-name: cache-elixir-deps
      with:
        path: |
          deps
          _build

          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}-test
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: ==> ðŸ”Ž Integrating test
      run: mix coveralls.json
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    services:
      pg:
        image: postgres:12
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  deploy:
    name: Deploy Gigalixir
    needs: [lint, check_format, dialyze, security, test]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: master # Checkout out master instead of the latest commit
        fetch-depth: 0 # Checkout the whole branch

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8.1

    - uses: mhanberg/gigalixir-action@v0.4.3
      with:
        GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_EMAIL }}
        GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
        GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APP_NAME }} # Feel free to also put this in your secrets
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        MIGRATIONS: true  # defaults to true
